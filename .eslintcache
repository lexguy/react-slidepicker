[{"D:\\xgithub\\react-slidepicker\\src\\index.js":"1","D:\\xgithub\\react-slidepicker\\src\\react-slidepicker\\src\\single.tsx":"2","D:\\xgithub\\react-slidepicker\\src\\react-slidepicker\\src\\pickerhoc.tsx":"3","D:\\xgithub\\react-slidepicker\\src\\react-slidepicker\\index.ts":"4","D:\\xgithub\\react-slidepicker\\src\\react-slidepicker\\src\\relatived.tsx":"5","D:\\xgithub\\react-slidepicker\\src\\Test\\testslide.js":"6","D:\\xgithub\\react-slidepicker\\src\\react-slidepicker\\src\\independent.tsx":"7","D:\\xgithub\\react-slidepicker\\src\\react-slidepicker\\src\\modal.tsx":"8"},{"size":668,"mtime":1610076221561,"results":"9","hashOfConfig":"10"},{"size":6597,"mtime":1615175576127,"results":"11","hashOfConfig":"10"},{"size":4884,"mtime":1615175689026,"results":"12","hashOfConfig":"10"},{"size":523,"mtime":1615172993780,"results":"13","hashOfConfig":"10"},{"size":2542,"mtime":1615170663877,"results":"14","hashOfConfig":"10"},{"size":3181,"mtime":1615175314522,"results":"15","hashOfConfig":"10"},{"size":1518,"mtime":1615175286705,"results":"16","hashOfConfig":"10"},{"size":1758,"mtime":1615175593504,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"dyevku",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\xgithub\\react-slidepicker\\src\\index.js",[],["36","37"],"D:\\xgithub\\react-slidepicker\\src\\react-slidepicker\\src\\single.tsx",[],"D:\\xgithub\\react-slidepicker\\src\\react-slidepicker\\src\\pickerhoc.tsx",["38","39"],"D:\\xgithub\\react-slidepicker\\src\\react-slidepicker\\index.ts",["40","41"],"D:\\xgithub\\react-slidepicker\\src\\react-slidepicker\\src\\relatived.tsx",[],"D:\\xgithub\\react-slidepicker\\src\\Test\\testslide.js",["42","43"],"/*\r\n * @Author: xuwei\r\n * @Date: 2021-01-08 11:20:53\r\n * @LastEditTime: 2021-03-08 11:48:34\r\n * @LastEditors: xuwei\r\n * @Description:\r\n */\r\n\r\nimport { useState } from \"react\";\r\nimport { CascadePicker, withModal, ParallelPicker } from \"../react-slidepicker/index.ts\";\r\nimport Data from \"./json/slidethree.json\";\r\nimport Spec from \"./json/spec.json\";\r\n\r\n// const ModalCasPicker = withModal(CascadePicker);\r\nconst ModalCasPicker = CascadePicker;\r\n// const\r\nconst ModalParPicker = withModal(ParallelPicker);\r\n\r\nexport default function App() {\r\n  const [isShow, setIsShow] = useState(false);\r\n\r\n  return (\r\n    <div>\r\n      {/* <div style={{ height: 100, backgroundColor: \"#a00\" }}></div> */}\r\n      {/* <ModalCasPicker\r\n        confirm={(arr) => {\r\n          console.info(\"arr\", arr);\r\n          setIsShow(false);\r\n        }}\r\n        cancel={() => setIsShow(false)}\r\n        show={isShow}\r\n        dataSource={Data}\r\n        pickerDeep={3}\r\n        pickerStyle={{\r\n          visibleNum: 3,\r\n          itemHeight: 40,\r\n          normalFontColor: \"#00a\",\r\n          normalFontSize: 12,\r\n          normalBgColor: \"#666\",\r\n          normalBgOpacity: 0.5,\r\n          activeFontSize: 18,\r\n          activeBgColor: \"#fff\",\r\n          activeBgOpacity: 1,\r\n          activeFontColor: \"#F00\",\r\n        }}\r\n        headOptions={{ borderTopRadius: 10, backgroundColor: \"#fff\" }}\r\n      >\r\n        <span onClick={() => setIsShow(true)}>xw</span>\r\n      </ModalCasPicker> */}\r\n\r\n      <ModalParPicker\r\n        confirm={(arr) => {\r\n          console.info(\"arr\", arr);\r\n          setIsShow(false);\r\n        }}\r\n        cancel={() => setIsShow(false)}\r\n        show={isShow}\r\n        dataSource={Spec}\r\n        pickerDeep={2}\r\n        // onceChange={(arr) => console.info(\"oncechange\", arr)}\r\n        // confirm={(arr) => console.info(\"confirm\", arr)}\r\n        // cancel={() => console.info(\"cancel\")}\r\n        pickerStyle={{\r\n          visibleNum: 3,\r\n          itemHeight: 40,\r\n          normalFontColor: \"#00a\",\r\n          normalFontSize: 12,\r\n          normalBgColor: \"#666\",\r\n          normalBgOpacity: 0.5,\r\n          activeFontSize: 18,\r\n          activeBgColor: \"#fff\",\r\n          activeBgOpacity: 1,\r\n          activeFontColor: \"#F00\",\r\n        }}\r\n        headOptions={{ borderTopRadius: 10, backgroundColor: \"#fff\" }}\r\n      >\r\n        <span onClick={() => setIsShow(true)}>xw</span>\r\n      </ModalParPicker>\r\n    </div>\r\n  );\r\n\r\n  // <div\r\n  //   style={{\r\n  //     backgroundColor: \"#333333dd\",\r\n  //     height: `100vh`,\r\n  //     display: \"flex\",\r\n  //     flexDirection: \"column\",\r\n  //     flex: 1,\r\n  //     justifyContent: \"flex-end\",\r\n  //   }}\r\n  // >\r\n  //   <CascadePicker\r\n  //     dataSource={Data}\r\n  //     pickerDeep={3}\r\n  //     onceChange={(arr) => console.info(\"arr\", arr)}\r\n  //     pickerStyle={{\r\n  //       visibleNum: 5,\r\n  //       itemHeight: 40,\r\n  //       normalFontColor: \"#00a\",\r\n  //       normalFontSize: 10,\r\n  //       activeFontSize: 18,\r\n  //       activeBgColor: \"#fff\",\r\n  //       activeBgOpacity: 1,\r\n  //       activeFontColor: \"#F00\",\r\n  //       normalBgColor: \"#666\",\r\n  //       normalBgOpacity: 0.5,\r\n  //     }}\r\n  //   />\r\n  // </div>\r\n}\r\n","D:\\xgithub\\react-slidepicker\\src\\react-slidepicker\\src\\independent.tsx",["44"],"D:\\xgithub\\react-slidepicker\\src\\react-slidepicker\\src\\modal.tsx",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":30,"column":13,"nodeType":"51","messageId":"52","endLine":30,"endColumn":15},{"ruleId":"53","severity":1,"message":"54","line":99,"column":14,"nodeType":"55","messageId":"56","endLine":99,"endColumn":23},{"ruleId":"53","severity":1,"message":"57","line":9,"column":8,"nodeType":"55","messageId":"56","endLine":9,"endColumn":18},{"ruleId":"58","severity":1,"message":"59","line":16,"column":14,"nodeType":"55","messageId":"60","endLine":16,"endColumn":27},{"ruleId":"61","severity":1,"message":"62","line":11,"column":8,"nodeType":"55","messageId":"56","endLine":11,"endColumn":12},{"ruleId":"61","severity":1,"message":"63","line":15,"column":7,"nodeType":"55","messageId":"56","endLine":15,"endColumn":21},{"ruleId":"53","severity":1,"message":"64","line":25,"column":25,"nodeType":"55","messageId":"56","endLine":25,"endColumn":35},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","@typescript-eslint/no-unused-vars","'getResult' is defined but never used.","Identifier","unusedVar","'IndePicker' is defined but never used.","@typescript-eslint/no-redeclare","'CascadePicker' is already defined.","redeclared","no-unused-vars","'Data' is defined but never used.","'ModalCasPicker' is assigned a value but never used.","'onceChange' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]